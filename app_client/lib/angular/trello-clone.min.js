(()=>{let e=(e,t,s)=>{t.otherwise("/");e.state("home",{url:"/",templateUrl:"/home/home.view.html",controller:"homeCtrl",controllerAs:"vm"}).state("register",{url:"/register",templateUrl:"/auth/register/register.view.html",controller:"registerCtrl",controllerAs:"vm"}).state("login",{url:"/login",templateUrl:"/auth/login/login.view.html",controller:"loginCtrl",controllerAs:"vm"});s.html5Mode({enabled:true,requireBase:false})};angular.module("trelloClone",["ui.router","dndLists","ui.utils","angular-click-outside","btford.socket-io"]).config(["$stateProvider","$urlRouterProvider","$locationProvider",e])})();(()=>{angular.module("trelloClone").controller("homeCtrl",e);e.$inject=["boardData","listData","taskData","attachmentData","$timeout","$state","authentication","messageFactory","$window","$location","socketioFactory","$scope"];function e(e,t,s,a,o,l,i,r,n,d,m,g){let u=this;u.params=d.search();u.taskEditModal=false;u.taskEdit=false;if(u.params.token){n.localStorage["trello-clone"]=u.params.token;let e=i.getShortUserName(u.params.name);n.localStorage["trello-clone-user-name"]=e.name;n.localStorage["trello-clone-short-user-name"]=e.shortName;l.go("home");d.search("token",null);d.search("name",null)}u.logout=(()=>{i.logout();u.isLoggedIn=false});u.authenticationCheck=(()=>{u.isLoggedIn=i.isLoggedIn();if(!u.isLoggedIn&&i.getToken()){g.$emit("userAuth","token expired")}});(u.updateCounter=(()=>{u.newDate=new Date;u.dateNow=u.newDate.toISOString();u.nextDay=u.newDate;u.nextDay.setDate(u.newDate.getDate()+1);u.nextDay=u.nextDay.toISOString();o(u.updateCounter,1e3)}))();(u.getBoardData=(()=>{e.board().then(e=>{const{color:t,lists:s,_id:a}=e.data[0];u.boardColor=t;u.lists=s;u.boardID=a}).catch(()=>{u.message="Не удалось загрузить доску."})}))();u.colors=["#0079BF","#D29034","#519839","#B04632","#89609E","#CD5A91","#4BBF6B","#00AECC","#838C91"];m.on("boardClient",e=>{u.lists=e.lists;u.boardColor=e.boardColor});m.on("modalListClient",e=>{if(e.modalList&&u.modalList){if(e.modalList._id===u.modalList._id){u.modalList=e.modalList;u.modalListIndex=e.modalListIndex}}});m.on("modalTaskClient",e=>{if(e.modalTask&&u.modalTask){if(e.modalTask._id===u.modalTask._id){u.modalList=e.modalList;u.modalListIndex=e.modalListIndex;u.modalTask=e.modalTask;u.modalTaskIndex=e.modalTaskIndex;u.editedTaskName=u.modalTask.taskName;u.listNameForTask=u.modalList.listName}}});let c=(e,t)=>{for(let s=0;s<u.lists.length;s++){if(u.lists[s]._id===e){t({listIndex:s})}}};let f=(e,t)=>{for(let s=0;s<u.lists.length;s++){for(let a=0;a<u.lists[s].tasks.length;a++){if(u.lists[s].tasks[a]._id===e){t({listIndex:s,taskIndex:a})}}}};let k=()=>{u.message="Список удалили.";u.taskEditModal=false;u.taskEdit=false};let h=()=>{u.message="Карточку удалили.";u.taskEditModal=false;u.taskEdit=false};let p=(e,t)=>{return new Promise((s,a)=>{if(!t._id){a({message:"list not found"})}if(!u.lists[e]){c(t._id,t=>{e=t.listIndex});if(!u.lists[e]||!u.lists[e]._id){a({message:"list not found"})}}if(t._id!==u.lists[e]._id){c(t._id,t=>{e=t.listIndex});if(u.lists[e]===undefined||u.lists[e]._id!==t._id){a({message:"list not found"})}}s({listIndex:e})})};let I=(e,t,s,a)=>{return new Promise((s,o)=>{if(!a._id){o({message:"task not found"})}let l=a._id;if(!u.lists[e]||!u.lists[e].tasks[t]){f(l,s=>{e=s.listIndex;t=s.taskIndex});if(!u.lists[e]){o({message:"list not found"})}if(!u.lists[e].tasks[t]||!u.lists[e].tasks[t]._id){o({message:"task not found"})}}let i=u.lists[e].tasks[t]._id;if(l!==i){f(l,s=>{e=s.listIndex;t=s.taskIndex});if(u.lists[e]===undefined){o({message:"list not found"})}if(u.lists[e].tasks[t]===undefined||u.lists[e].tasks[t]._id!==l){o({message:"task not found"})}}s({listIndex:e,taskIndex:t})})};u.updateBoard=((t,s)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!t){t=u.boardColor}if(!s){s=u.lists}let a={lists:s,color:t};e.updateBoard(u.boardID,a).then(e=>{let{color:t,lists:s}=e.data;u.boardColor=t;u.lists=s;m.emit("boardServer",{boardColor:u.boardColor,lists:u.lists})}).catch(e=>{if(e.status===401){r.message="Войдите в учётную запись для продолжения.";u.logout()}else{u.message="Не удалось сохранить данные."}})});u.dndList=((e,t)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!t._id){k();return}p(e,t).then(t=>{e=t.listIndex;m.emit("modalListServer",{modalList:u.lists[e],modalListIndex:e});u.updateBoard(u.boardColor,u.lists)}).catch(e=>{if(e.message==="list not found"){k()}else{u.message="Произошла ошибка."}})});u.updateListPosition=((e,t,s)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!s._id){k();return}p(e,s).then(a=>{e=a.listIndex;u.lists.splice(e,1);u.lists.splice(t,0,s);m.emit("modalListServer",{modalList:u.lists[e],modalListIndex:e});u.updateBoard(u.boardColor,u.lists)}).catch(e=>{if(e.message==="list not found"){k()}else{u.message="Произошла ошибка."}})});u.createList=(e=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!e||e===""){u.message="Введите имя списка.";return}u.message="";e.replace(/^\s+|\s+$/g,"");let s={listName:e};t.createList(u.boardID,s).then(e=>{u.lists.push(e.data);m.emit("boardServer",{boardColor:u.boardColor,lists:u.lists})}).catch(e=>{if(e.status===401){r.message="Войдите в учётную запись для продолжения.";u.logout()}else{u.message="Не удалось создать список."}})});u.updateList=((e,s,a)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!e._id){k();return}const{_id:o,listName:n}=e;if(a===n){return}else if(!a||a===""){u.message="Введите имя списка.";return}u.message="";a.replace(/^\s+|\s+$/g,"");a?e.listName=a:e.listName;let d={listName:a};p(s,e).then(e=>{s=e.listIndex;t.updateList(u.boardID,o,d).then(e=>{u.lists[s].listName=e.data.listName;m.emit("modalListServer",{modalList:u.lists[s],modalListIndex:s});m.emit("boardServer",{boardColor:u.boardColor,lists:u.lists})}).catch(e=>{if(e.status===401){r.message="Войдите в учётную запись для продолжения.";u.logout()}else{u.message="Не удалось изменить имя списка."}})}).catch(e=>{if(e.message==="list not found"){k()}else{u.message="Произошла ошибка."}})});u.deleteList=((e,s)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!e._id){k();return}const{_id:a}=e;t.deleteList(u.boardID,a).then(()=>{u.lists.splice(s,1);m.emit("boardServer",{boardColor:u.boardColor,lists:u.lists})}).catch(e=>{if(e.status===401){r.message="Войдите в учётную запись для продолжения.";u.logout()}else{u.message="Не удалось удалить список."}})});u.createTask=((e,t,a,o)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!e._id){k();return}if(!a||a.length===0){u.message="Введите имя карточки";return}u.message="";a.replace(/^\s+|\s+$/g,"");let n={taskName:a,side:o};const{_id:d,tasks:g}=e;s.createTask(u.boardID,d,n).then(e=>{if(o==="top"){g.unshift(e.data);m.emit("boardServer",{boardColor:u.boardColor,lists:u.lists})}else{g.push(e.data);m.emit("boardServer",{boardColor:u.boardColor,lists:u.lists})}}).catch(e=>{if(e.status===401){r.message="Войдите в учётную запись для продолжения.";u.logout()}else{u.message="Не удалось создать карточку."}})});u.dndTask=((e,t,s,a)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!s._id){k();return}if(!a._id){h();return}I(e,t,s,a).then(s=>{e=s.listIndex;t=s.taskIndex;m.emit("modalTaskServer",{modalList:u.lists[e],modalListIndex:e,modalTask:u.lists[e].tasks[t],modalTaskIndex:t});u.updateBoard(u.color,u.lists)}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{u.message="Произошла ошибка."}})});u.updateTaskPosition=((e,t,s,a,o,n)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!o._id){k();return}if(!n._id){h();return}I(e,t,o,n).then(o=>{e=o.listIndex;t=o.taskIndex;let l=u.lists[e].tasks.splice(t,1);u.lists[s].tasks.splice(a,0,l[0]);u.listNameForTask=u.lists[s].listName;m.emit("modalTaskServer",{modalList:u.lists[s],modalListIndex:s,modalTask:u.modalTask,modalTaskIndex:a});u.updateBoard(u.boardColor,u.lists)}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{u.message="Произошла ошибка."}})});u.updateTask=((e,t,a)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!e._id){k();return}if(!t._id){h();return}s.updateTask(u.boardID,e._id,t._id,a).then(e=>{const{taskName:s,description:a,date:o,status:l}=e.data;if(t._id===e.data._id){t.date=o;t.description=a;t.taskName=s;t.status=l;u.modalTask.date=o;u.modalTask.description=a;u.modalTask.taskName=s;u.modalTask.status=l}m.emit("modalTaskServer",{modalList:u.modalList,modalListIndex:u.modalListIndex,modalTask:u.modalTask,modalTaskIndex:u.modalTaskIndex});m.emit("boardServer",{boardColor:u.boardColor,lists:u.lists})}).catch(e=>{if(e.status===401){r.message="Войдите в учётную запись для продолжения.";u.logout()}else{u.message="Не удалось обновить карточку."}})});u.dateTimePicker=((e,t,s,a)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!s._id){k();return}if(!a._id){h();return}I(e,t,s,a).then(s=>{e=s.listIndex;t=s.taskIndex;let a=u.now,o=u.taskDate,l=u.taskTime;if(o!==null){a.setFullYear(o.getFullYear());a.setMonth(o.getMonth());a.setDate(o.getDate())}if(l!==null){a.setHours(l.getHours());a.setMinutes(l.getMinutes())}let i=u.lists[e],r=i.tasks[t],n={taskName:r.taskName,description:r.description,date:a,status:r.status};u.updateTask(i,r,n)}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{u.message="Произошла ошибка."}})});u.dateTimeRemove=((e,t,s,a)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!s._id){k();return}if(!a._id){h();return}I(e,t,s,a).then(s=>{e=s.listIndex;t=s.taskIndex;let a=u.lists[e],o=a.tasks[t],l={taskName:o.taskName,description:o.description,date:null,status:o.status};u.updateTask(a,o,l)}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{u.message="Произошла ошибка."}})});u.updateTaskName=((e,t,s,a,o)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!s._id){k();return}if(!a._id){h();return}I(e,t,s,a).then(s=>{e=s.listIndex;t=s.taskIndex;let a=u.lists[e],l=a.tasks[t],i={taskName:o,description:l.description,date:l.date,status:l.status};u.updateTask(a,l,i)}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{u.message="Произошла ошибка."}})});u.updateTaskDescription=((e,t,s,a,o)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!s._id){k();return}if(!a._id){h();return}I(e,t,s,a).then(s=>{e=s.listIndex;t=s.taskIndex;let a=u.lists[e],l=a.tasks[t],i={taskName:l.taskName,description:o,date:l.date,status:l.status};u.updateTask(a,l,i)}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{u.message="Произошла ошибка."}})});u.updateTaskStatus=((e,t,s,a,o)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!s._id){k();return}if(!a._id){h();return}I(e,t,s,a).then(s=>{e=s.listIndex;t=s.taskIndex;let a=u.lists[e],l=a.tasks[t],i={taskName:l.taskName,description:l.description,date:l.date,status:o};u.updateTask(a,l,i)}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{u.message="Произошла ошибка."}})});u.deleteTask=((e,t,a,o)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!e._id){k();return}if(!a._id){h();return}I(t,o,e,a).then(e=>{t=e.listIndex;o=e.taskIndex;let a=u.lists[t]._id,l=u.lists[t].tasks[o]._id;s.deleteTask(u.boardID,a,l).then(()=>{u.lists[t].tasks.splice(o,1);m.emit("boardServer",{boardColor:u.boardColor,lists:u.lists})}).catch(e=>{if(e.status===401){r.message="Войдите в учётную запись для продолжения.";u.logout()}else{u.message="Не удалось удалить карточку."}})}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{u.message="Произошла ошибка."}})});u.uploadAttachment=((e,t,s,o,n)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!o._id){k();return}if(!n._id){h();return}I(t,s,o,n).then(e=>{t=e.listIndex;s=e.taskIndex;let o=angular.element(document.querySelector("#file")),l=angular.element(document.querySelector("#fileMobile"));let i;if(o[0].files[0]){i=o[0].files[0]}else{i=l[0].files[0]}let n=u.lists[t].listName,d=u.lists[t]._id,g=u.lists[t].tasks[s].taskName,c=u.lists[t].tasks[s]._id;o.replaceWith('<input type="file" id="file" name="fileName" accept=".jpg, .jpeg, .png, .bmp" onchange="angular.element(event.target.form).triggerHandler(\'submit\');"/>');l.replaceWith('<input type="file" id="fileMobile" name="fileName" accept=".jpg, .jpeg, .png, .bmp" onchange="angular.element(event.target.form).triggerHandler(\'submit\');"/>');a.addAttachment(u.boardID,d,c,i,n,g).then(e=>{let{message:a}=e.data;u.alertFileUpload="alert alert-danger";switch(a){case"LIMIT_FILE_SIZE":u.fileUploaderMessage="Допустимый размер файла до 10 МБ.";break;case"FILE_TYPE":u.fileUploaderMessage="Допустимый формат файла jpeg, bmp, png.";break;case"FILE_WAS_NOT_UPLOADED":u.fileUploaderMessage="Не удалось загрузить файл.";break;case"FILE_WAS_NOT_SELECTED":u.fileUploaderMessage="Файл не был выбран.";break;default:u.alertFileUpload="alert alert-success";u.fileUploaderMessage="Файл загружен!";u.lists[t].tasks[s].attachments.push(e.data);u.modalTask.attachments=u.lists[t].tasks[s].attachments;m.emit("modalTaskServer",{modalList:u.modalList,modalListIndex:u.modalListIndex,modalTask:u.modalTask,modalTaskIndex:u.modalTaskIndex});m.emit("boardServer",{boardColor:u.boardColor,lists:u.lists})}}).catch(e=>{if(e.status===401){r.message="Войдите в учётную запись для продолжения.";u.logout()}else{u.alertFileUpload="alert alert-danger";u.fileUploaderMessage="Не удалось загрузить файл."}})}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{u.message="Произошла ошибка."}})});u.deleteAttachment=((e,t,s,o,n,d)=>{if(!i.isLoggedIn()){r.message="Войдите в учётную запись для продолжения.";l.go("login");return}if(!s._id){k();return}if(!o._id){h();return}I(e,t,s,o).then(s=>{e=s.listIndex;t=s.taskIndex;if(!u.lists[e].tasks[t].attachments||!u.lists[e].tasks[t].attachments[n]){return}let o=u.lists[e]._id,l=u.lists[e].tasks[t]._id,i=u.lists[e].tasks[t].attachments[n]._id;if(i!==d._id){for(let s=0;s<u.lists[e].tasks[t].attachments;s++){if(u.lists[e].tasks[t].attachments[s]._id===d._id){i=u.lists[e].tasks[t].attachments[s]._id}}}if(i!==d._id){return}a.deleteAttachment(u.boardID,o,l,i).then(()=>{u.lists[e].tasks[t].attachments.splice(n,1);u.modalTask.attachments=u.lists[e].tasks[t].attachments;m.emit("modalTaskServer",{modalList:u.modalList,modalListIndex:u.modalListIndex,modalTask:u.modalTask,modalTaskIndex:u.modalTaskIndex});m.emit("boardServer",{boardColor:u.boardColor,lists:u.lists})}).catch(e=>{if(e.status===401){r.message="Войдите в учётную запись для продолжения.";u.logout()}else{u.message="Не удалось удалить вложение."}})}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{u.message="Произошла ошибка."}})});u.taskEditor=((e,...t)=>{let s=e.composedPath();for(let e=0;e<s.length;e++){if(s[e].nodeName.toLowerCase()==="a"){s.splice(0,e);break}}let a=s[3].offsetTop,o=s[3].offsetLeft,l=s[1].offsetTop,i=s[1].offsetLeft,r=s[3].scrollTop,n=s[7].scrollLeft;u.taskEditWidth=s[1].clientWidth;u.deviceWidth=s[7].clientWidth;u.deviceHeight=s[7].clientHeight;u.taskEditCoordX=o+i-n;u.taskEditCoordY=a+l-r;if(u.deviceHeight-u.taskEditCoordY<135){u.taskEditCoordY=u.deviceHeight-140}u.editTaskBtnSide=u.taskEditCoordX+565>u.deviceWidth;u.editTaskBtnVerticalSide=u.taskEditCoordY+220>u.deviceHeight;u.editTaskDatePickerVerticalSide=u.taskEditCoordY+300>u.deviceHeight;u.editTaskBtnSide?u.editTaskMenuLeft="quick-task-edit-buttons-left":u.editTaskMenuLeft="";u.editTaskBtnSide?u.taskPositionMenu="task-position-menu-left":u.taskPositionMenu="";u.editTaskBtnVerticalSide?u.taskVerticalPositionMenu="task-position-menu-top":u.taskVerticalPositionMenu="";u.editTaskDatePickerVerticalSide?u.taskVerticalPositionDatePicker="quick-task-edit-date-picker-menu-top":u.taskVerticalPositionDatePicker="";u.modalList=t[0];u.modalListIndex=t[1];u.modalTask=t[2];u.modalTaskIndex=t[3];u.editedTaskName=u.modalTask.taskName;u.listNameForTask=u.modalList.listName});u.listMenuPosition=(e=>{let t=e.composedPath();for(let e=0;e<t.length;e++){if(t[e].nodeName.toLowerCase()==="a"){t.splice(0,e);break}}let s=t[7].clientWidth,a=e.x;a+350>s&&a-350<0?u.listPositionMenu="list-menu-center":a+350>s?u.listPositionMenu="list-menu-left":u.listPositionMenu=""});u.dateSetting=((e,t,s,a)=>{if(!s._id){k();return}if(!a._id){h();return}I(e,t,s,a).then(s=>{e=s.listIndex;t=s.taskIndex;let a=u.lists[e].tasks[t].date;if(a){u.now=new Date(a)}else{u.now=new Date;u.now.setDate(u.now.getDate()+1);u.now.setHours(12,0,0,0)}u.taskDate=u.now;u.taskTime=u.now}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{u.message="Произошла ошибка."}})})}})();(()=>{angular.module("trelloClone").controller("registerCtrl",e);e.$inject=["authentication","$state"];function e(e,t){let s=this;s.createAccount=((a,o,l)=>{if(!a||!o||!l){s.registerError="Все поля обязательны для заполнения.";return}let i={name:a,email:o,password:l};e.registerUser(i).then(()=>{s.registerError="";t.go("home")}).catch(e=>{if(e.data.message==="Email already used"){s.registerError="Данный email уже используется."}else{s.registerError="Не удалось создать учётную запись."}})})}})();(()=>{angular.module("trelloClone").controller("loginCtrl",e);e.$inject=["authentication","$state","messageFactory","$location","$window"];function e(e,t,s,a,o){let l=this;l.alertMessage=s.message;l.clearMessage=(()=>{s.message="";l.alertMessage=""});l.login=((s,a)=>{if(!s||!a){l.loginError="Все поля обязательны для заполнения.";return}let o={email:s,password:a};e.login(o).then(()=>{l.loginError="";t.go("home")}).catch(e=>{if(e.data.message==="Incorrect username."){l.loginError="Не верный логин."}else if(e.data.message==="Incorrect password."){l.loginError="Не верный логин или пароль."}else{l.loginError="Не удалось войти в учётную запись."}})});l.params=a.search();if(l.params.token){o.localStorage["trello-clone"]=l.params.token;let s=e.getShortUserName(l.params.name);o.localStorage["trello-clone-user-name"]=s.name;o.localStorage["trello-clone-short-user-name"]=s.shortName;t.go("home");a.search("token",null);a.search("name",null)}l.loginFacebook=(()=>{e.loginFacebook()});l.loginGoogle=(()=>{e.loginGoogle()})}})();(()=>{angular.module("trelloClone").controller("pageHeaderCtrl",e);e.$inject=["authentication","$state","$scope"];function e(e,t,s){let a=this;s.$on("loginModalEvent",(e,t)=>{if(t==="user logged in"){a.checkUser()}});s.$on("userAuth",(e,t)=>{if(t==="token expired"){a.checkUser()}});a.logout=(()=>{e.logout();a.isLoggedIn=false;t.go("home")});(a.checkUser=(()=>{a.isLoggedIn=e.isLoggedIn();if(a.isLoggedIn){a.currentUser=e.currentUser();if(!a.currentUser.name||!a.currentUser.shortName){e.currentUser().then(e=>{a.currentUser=e}).catch(()=>{e.logout();a.isLoggedIn=false})}}else{e.logout();a.isLoggedIn=false}}))()}})();(()=>{angular.module("trelloClone").controller("loginModalCtrl",e);e.$inject=["authentication","$state","$scope"];function e(e,t,s){let a=this;a.login=((o,l)=>{if(!o||!l){a.loginError="Все поля обязательны для заполнения.";return}let i={email:o,password:l};e.login(i).then(()=>{a.loginError="";a.loginModal=!a.loginModal;s.$emit("loginModalEvent","user logged in");t.go("home")}).catch(e=>{if(e.data.message==="Incorrect username."){a.loginError="Не верный логин."}else if(e.data.message==="Incorrect password."){a.loginError="Не верный логин или пароль."}else{a.loginError="Не удалось войти в учётную запись."}})});a.createAccount=((o,l,i)=>{if(!o||!l||!i){a.registerError="Все поля обязательны для заполнения.";return}let r={name:o,email:l,password:i};e.registerUser(r).then(()=>{a.registerError="";a.loginModal=!a.loginModal;s.$emit("loginModalEvent","user logged in");t.go("home")}).catch(e=>{if(e.data.message==="Email already used"){a.registerError="Данный email уже используется."}else{a.registerError="Не удалось создать учётную запись."}})});a.loginFacebook=(()=>{e.loginFacebook()});a.loginGoogle=(()=>{e.loginGoogle()})}})();(()=>{angular.module("trelloClone").service("boardData",e);e.$inject=["$http","authentication"];function e(e,t){let s=()=>{return e.get("/api/board")};let a=(s,a)=>{return e.put(`/api/board/${s}/lists`,a,{headers:{Authorization:"Bearer "+t.getToken()}})};return{board:s,updateBoard:a}}})();(()=>{angular.module("trelloClone").service("listData",e);e.$inject=["$http","authentication"];function e(e,t){let s=(s,a)=>{return e.post(`/api/board/${s}/list`,a,{headers:{Authorization:"Bearer "+t.getToken()}})};let a=(s,a,o)=>{return e.put(`/api/board/${s}/list/${a}`,o,{headers:{Authorization:"Bearer "+t.getToken()}})};let o=(s,a)=>{return e.delete(`/api/board/${s}/list/${a}`,{headers:{Authorization:"Bearer "+t.getToken()}})};return{createList:s,updateList:a,deleteList:o}}})();(()=>{angular.module("trelloClone").service("taskData",e);e.$inject=["$http","authentication"];function e(e,t){let s=(s,a,o)=>{return e.post(`/api/board/${s}/list/${a}/task`,o,{headers:{Authorization:"Bearer "+t.getToken()}})};let a=(s,a,o,l)=>{return e.put(`/api/board/${s}/list/${a}/task/${o}`,l,{headers:{Authorization:"Bearer "+t.getToken()}})};let o=(s,a,o)=>{return e.delete(`/api/board/${s}/list/${a}/task/${o}`,{headers:{Authorization:"Bearer "+t.getToken()}})};return{createTask:s,updateTask:a,deleteTask:o}}})();(()=>{angular.module("trelloClone").service("attachmentData",e);e.$inject=["$http","authentication"];function e(e,t){let s=(s,a,o,l,i,r)=>{let n=new FormData;n.append("listName",i);n.append("taskName",r);n.append("attachmentFile",l);return e.post(`/api/board/${s}/list/${a}/task/${o}/attachments`,n,{transformRequest:angular.identity,headers:{Authorization:"Bearer "+t.getToken(),"Content-Type":undefined}})};let a=(s,a,o,l)=>{return e.delete(`/api/board/${s}/list/${a}/task/${o}/attachments/${l}`,{headers:{Authorization:"Bearer "+t.getToken()}})};return{addAttachment:s,deleteAttachment:a}}})();(()=>{angular.module("trelloClone").service("authentication",e);e.$inject=["$http","$window"];function e(e,t){let s=e=>{t.localStorage["trello-clone"]=e};let a=()=>{return t.localStorage["trello-clone"]};let o=(e,s)=>{t.localStorage["trello-clone-user-name"]=e;t.localStorage["trello-clone-short-user-name"]=s};let l=e=>{let t;if(e.split(" ")[1]){t=e.split(" ")[0].split("")[0]+e.split(" ")[1].split("")[0]}else if(e.split("")[1]){t=e.split(" ")[0].split("")[0]+e.split(" ")[0].split("")[1]}else{t=e.split("")[0]}t=t.toUpperCase();return{name:e,shortName:t}};let i=()=>{t.localStorage.removeItem("trello-clone");t.localStorage.removeItem("trello-clone-user-name");t.localStorage.removeItem("trello-clone-short-user-name")};let r=()=>{let e=a();if(e){let s=JSON.parse(t.atob(e.split(".")[1]));return s.exp>Date.now()/1e3}else{return false}};let n=function(){if(r()){let s=t.localStorage["trello-clone-user-name"],i=t.localStorage["trello-clone-short-user-name"];if(s&&i){return{name:s,shortName:i}}else{let t=a();return e.get(`/api/userinfo/${t}`,{headers:{Authorization:"Bearer "+t}}).then(e=>{let t=l(e.data);o(t.name,t.shortName);return{name:t.name,shortName:t.shortName}})}}};let d=t=>{return e.post(`/api/register`,t).then(e=>{s(e.data.token);let t=l(e.data.name);o(t.name,t.shortName)})};let m=t=>{return e.post(`/api/login`,t).then(e=>{s(e.data.token);let t=l(e.data.name);o(t.name,t.shortName)})};let g=()=>{window.location.replace("http://localhost:3000/api/auth/facebook")};let u=()=>{window.location.replace("http://localhost:3000/api/auth/google")};return{getToken:a,getShortUserName:l,isLoggedIn:r,currentUser:n,registerUser:d,login:m,logout:i,loginFacebook:g,loginGoogle:u}}})();(()=>{let e=()=>{return{restrict:"EA",templateUrl:"/common/directives/pageHeader/pageHeader.template.html",controller:"pageHeaderCtrl as phvm"}};angular.module("trelloClone").directive("pageHeader",e)})();(()=>{let e=()=>{return{restrict:"EA",templateUrl:"/common/directives/quickTaskEditModal/quickTaskEditModal.template.html"}};angular.module("trelloClone").directive("quickTaskEditModal",e)})();(()=>{let e=()=>{return{restrict:"EA",templateUrl:"/common/directives/taskEditModal/taskEditModal.template.html"}};angular.module("trelloClone").directive("taskEditModal",e)})();(()=>{let e=()=>{return{restrict:"EA",templateUrl:"/common/directives/changeTaskPosition/changeTaskPosition.template.html"}};angular.module("trelloClone").directive("changeTaskPosition",e)})();(()=>{let e=()=>{return{restrict:"EA",templateUrl:"/common/directives/dateTimePicker/dateTimePicker.template.html"}};angular.module("trelloClone").directive("dateTimePicker",e)})();(()=>{let e=()=>{return{require:"?ngModel",link:function(e,t,s,a){if(!a)return;if(s.type!=="time")return;a.$formatters.unshift(function(e){return e.replace(/:00\.000$/,"")})}}};angular.module("trelloClone").directive("input",e)})();(()=>{let e=()=>{return{restrict:"EA",templateUrl:"/common/directives/loginModal/loginModal.template.html",controller:"loginModalCtrl as lmvm"}};angular.module("trelloClone").directive("loginModal",e)})();(()=>{let e=()=>{return{message:""}};angular.module("trelloClone").factory("messageFactory",e)})();(()=>{angular.module("trelloClone").factory("socketioFactory",e);e.$inject=["socketFactory"];function e(e){return e()}})();