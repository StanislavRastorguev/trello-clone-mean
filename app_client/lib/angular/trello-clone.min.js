(()=>{const e=(e,t,s)=>{t.otherwise("/");e.state("home",{url:"/",templateUrl:"/home/home.view.html",controller:"homeCtrl",controllerAs:"vm"}).state("register",{url:"/register",templateUrl:"/auth/register/register.view.html",controller:"registerCtrl",controllerAs:"vm"}).state("login",{url:"/login",templateUrl:"/auth/login/login.view.html",controller:"loginCtrl",controllerAs:"vm"});s.html5Mode({enabled:true,requireBase:false})};angular.module("trelloClone",["ui.router","dndLists","ui.utils","angular-click-outside","btford.socket-io"]).config(["$stateProvider","$urlRouterProvider","$locationProvider",e])})();(()=>{angular.module("trelloClone").controller("homeCtrl",e);e.$inject=["boardData","listData","taskData","attachmentData","$timeout","$state","authentication","messageFactory","$window","$location","socketioFactory","$scope"];function e(e,t,s,a,o,i,l,n,r,d,c,m){const g=this;g.params=d.search();g.taskEditModal=false;g.taskEdit=false;if(g.params.token){r.localStorage["trello-clone"]=g.params.token;const e=l.getShortUserName(g.params.name);r.localStorage["trello-clone-user-name"]=e.name;r.localStorage["trello-clone-short-user-name"]=e.shortName;i.go("home");d.search("token",null);d.search("name",null)}g.logout=(()=>{l.logout();g.isLoggedIn=false});g.authenticationCheck=(()=>{g.isLoggedIn=l.isLoggedIn();if(!g.isLoggedIn&&l.getToken()){m.$emit("userAuth","token expired")}});(g.updateCounter=(()=>{g.newDate=new Date;g.dateNow=g.newDate.toISOString();g.nextDay=g.newDate;g.nextDay.setDate(g.newDate.getDate()+1);g.nextDay=g.nextDay.toISOString();o(g.updateCounter,1e3)}))();(g.getBoardData=(()=>{e.board().then(e=>{const{color:t,lists:s,_id:a}=e.data[0];g.boardColor=t;g.lists=s;g.boardID=a}).catch(()=>{g.message="Не удалось загрузить доску."})}))();g.colors=["#0079BF","#D29034","#519839","#B04632","#89609E","#CD5A91","#4BBF6B","#00AECC","#838C91"];c.on("boardClient",e=>{g.lists=e.lists;g.boardColor=e.boardColor});c.on("modalListClient",e=>{if(e.modalList&&g.modalList){if(e.modalList._id===g.modalList._id){g.modalList=e.modalList;g.modalListIndex=e.modalListIndex}}});c.on("modalTaskClient",e=>{if(e.modalTask&&g.modalTask){if(e.modalTask._id===g.modalTask._id){g.modalList=e.modalList;g.modalListIndex=e.modalListIndex;g.modalTask=e.modalTask;g.modalTaskIndex=e.modalTaskIndex;g.editedTaskName=g.modalTask.taskName;g.listNameForTask=g.modalList.listName}}});const u=(e,t)=>{for(let s=0;s<g.lists.length;s+=1){if(g.lists[s]._id===e){t({listIndex:s})}}};const f=(e,t)=>{for(let s=0;s<g.lists.length;s+=1){for(let a=0;a<g.lists[s].tasks.length;a+=1){if(g.lists[s].tasks[a]._id===e){t({listIndex:s,taskIndex:a})}}}};const k=()=>{g.message="Список удалили.";g.taskEditModal=false;g.taskEdit=false};const h=()=>{g.message="Карточку удалили.";g.taskEditModal=false;g.taskEdit=false};const p=(e,t)=>{return new Promise((s,a)=>{if(!t._id){a({message:"list not found"})}if(!g.lists[e]){u(t._id,t=>{e=t.listIndex});if(!g.lists[e]||!g.lists[e]._id){a({message:"list not found"})}}if(t._id!==g.lists[e]._id){u(t._id,t=>{e=t.listIndex});if(g.lists[e]===undefined||g.lists[e]._id!==t._id){a({message:"list not found"})}}s({listIndex:e})})};const I=(e,t,s,a)=>{return new Promise((s,o)=>{if(!a._id){o({message:"task not found"})}const i=a._id;if(!g.lists[e]||!g.lists[e].tasks[t]){f(i,s=>{e=s.listIndex;t=s.taskIndex});if(!g.lists[e]){o({message:"list not found"})}if(!g.lists[e].tasks[t]||!g.lists[e].tasks[t]._id){o({message:"task not found"})}}const l=g.lists[e].tasks[t]._id;if(i!==l){f(i,s=>{e=s.listIndex;t=s.taskIndex});if(g.lists[e]===undefined){o({message:"list not found"})}if(g.lists[e].tasks[t]===undefined||g.lists[e].tasks[t]._id!==i){o({message:"task not found"})}}s({listIndex:e,taskIndex:t})})};g.updateBoard=((t,s)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!t){t=g.boardColor}if(!s){s=g.lists}const a={lists:s,color:t};e.updateBoard(g.boardID,a).then(e=>{const{color:t,lists:s}=e.data;g.boardColor=t;g.lists=s;c.emit("boardServer",{boardColor:g.boardColor,lists:g.lists})}).catch(e=>{if(e.status===401){n.message="Войдите в учётную запись для продолжения.";g.logout()}else{g.message="Не удалось сохранить данные."}})});g.dndList=((e,t)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!t._id){k();return}p(e,t).then(t=>{e=t.listIndex;c.emit("modalListServer",{modalList:g.lists[e],modalListIndex:e});g.updateBoard(g.boardColor,g.lists)}).catch(e=>{if(e.message==="list not found"){k()}else{g.message="Произошла ошибка."}})});g.updateListPosition=((e,t,s)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!s._id){k();return}p(e,s).then(a=>{e=a.listIndex;g.lists.splice(e,1);g.lists.splice(t,0,s);c.emit("modalListServer",{modalList:g.lists[e],modalListIndex:e});g.updateBoard(g.boardColor,g.lists)}).catch(e=>{if(e.message==="list not found"){k()}else{g.message="Произошла ошибка."}})});g.createList=(e=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!e||e===""){g.message="Введите имя списка.";return}g.message="";e.replace(/^\s+|\s+$/g,"");const s={listName:e};t.createList(g.boardID,s).then(e=>{g.lists.push(e.data);c.emit("boardServer",{boardColor:g.boardColor,lists:g.lists})}).catch(e=>{if(e.status===401){n.message="Войдите в учётную запись для продолжения.";g.logout()}else{g.message="Не удалось создать список."}})});g.updateList=((e,s,a)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!e._id){k();return}const{_id:o,listName:r}=e;if(a===r){return}if(!a||a===""){g.message="Введите имя списка.";return}g.message="";a.replace(/^\s+|\s+$/g,"");a?e.listName=a:e.listName;const d={listName:a};p(s,e).then(e=>{s=e.listIndex;t.updateList(g.boardID,o,d).then(e=>{g.lists[s].listName=e.data.listName;c.emit("modalListServer",{modalList:g.lists[s],modalListIndex:s});c.emit("boardServer",{boardColor:g.boardColor,lists:g.lists})}).catch(e=>{if(e.status===401){n.message="Войдите в учётную запись для продолжения.";g.logout()}else{g.message="Не удалось изменить имя списка."}})}).catch(e=>{if(e.message==="list not found"){k()}else{g.message="Произошла ошибка."}})});g.deleteList=((e,s)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!e._id){k();return}const{_id:a}=e;t.deleteList(g.boardID,a).then(()=>{g.lists.splice(s,1);c.emit("boardServer",{boardColor:g.boardColor,lists:g.lists})}).catch(e=>{if(e.status===401){n.message="Войдите в учётную запись для продолжения.";g.logout()}else{g.message="Не удалось удалить список."}})});g.createTask=((e,t,a,o)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!e._id){k();return}if(!a||a.length===0){g.message="Введите имя карточки";return}g.message="";a.replace(/^\s+|\s+$/g,"");const r={taskName:a,side:o};const{_id:d,tasks:m}=e;s.createTask(g.boardID,d,r).then(e=>{if(o==="top"){m.unshift(e.data);c.emit("boardServer",{boardColor:g.boardColor,lists:g.lists})}else{m.push(e.data);c.emit("boardServer",{boardColor:g.boardColor,lists:g.lists})}}).catch(e=>{if(e.status===401){n.message="Войдите в учётную запись для продолжения.";g.logout()}else{g.message="Не удалось создать карточку."}})});g.dndTask=((e,t,s,a)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!s._id){k();return}if(!a._id){h();return}I(e,t,s,a).then(s=>{e=s.listIndex;t=s.taskIndex;c.emit("modalTaskServer",{modalList:g.lists[e],modalListIndex:e,modalTask:g.lists[e].tasks[t],modalTaskIndex:t});g.updateBoard(g.color,g.lists)}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{g.message="Произошла ошибка."}})});g.updateTaskPosition=((e,t,s,a,o,r)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!o._id){k();return}if(!r._id){h();return}I(e,t,o,r).then(o=>{e=o.listIndex;t=o.taskIndex;const i=g.lists[e].tasks.splice(t,1);g.lists[s].tasks.splice(a,0,i[0]);g.listNameForTask=g.lists[s].listName;c.emit("modalTaskServer",{modalList:g.lists[s],modalListIndex:s,modalTask:g.modalTask,modalTaskIndex:a});g.updateBoard(g.boardColor,g.lists)}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{g.message="Произошла ошибка."}})});g.updateTask=((e,t,a)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!e._id){k();return}if(!t._id){h();return}s.updateTask(g.boardID,e._id,t._id,a).then(e=>{const{taskName:s,description:a,date:o,status:i}=e.data;if(t._id===e.data._id){t.date=o;t.description=a;t.taskName=s;t.status=i;g.modalTask.date=o;g.modalTask.description=a;g.modalTask.taskName=s;g.modalTask.status=i}c.emit("modalTaskServer",{modalList:g.modalList,modalListIndex:g.modalListIndex,modalTask:g.modalTask,modalTaskIndex:g.modalTaskIndex});c.emit("boardServer",{boardColor:g.boardColor,lists:g.lists})}).catch(e=>{if(e.status===401){n.message="Войдите в учётную запись для продолжения.";g.logout()}else{g.message="Не удалось обновить карточку."}})});g.dateTimePicker=((e,t,s,a)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!s._id){k();return}if(!a._id){h();return}I(e,t,s,a).then(s=>{e=s.listIndex;t=s.taskIndex;const a=g.now;const o=g.taskDate;const i=g.taskTime;if(o!==null){a.setFullYear(o.getFullYear());a.setMonth(o.getMonth());a.setDate(o.getDate())}if(i!==null){a.setHours(i.getHours());a.setMinutes(i.getMinutes())}const l=g.lists[e];const n=l.tasks[t];const r={taskName:n.taskName,description:n.description,date:a,status:n.status};g.updateTask(l,n,r)}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{g.message="Произошла ошибка."}})});g.dateTimeRemove=((e,t,s,a)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!s._id){k();return}if(!a._id){h();return}I(e,t,s,a).then(s=>{e=s.listIndex;t=s.taskIndex;const a=g.lists[e];const o=a.tasks[t];const i={taskName:o.taskName,description:o.description,date:null,status:o.status};g.updateTask(a,o,i)}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{g.message="Произошла ошибка."}})});g.updateTaskName=((e,t,s,a,o)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!s._id){k();return}if(!a._id){h();return}I(e,t,s,a).then(s=>{e=s.listIndex;t=s.taskIndex;const a=g.lists[e];const i=a.tasks[t];const l={taskName:o,description:i.description,date:i.date,status:i.status};g.updateTask(a,i,l)}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{g.message="Произошла ошибка."}})});g.updateTaskDescription=((e,t,s,a,o)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!s._id){k();return}if(!a._id){h();return}I(e,t,s,a).then(s=>{e=s.listIndex;t=s.taskIndex;const a=g.lists[e];const i=a.tasks[t];const l={taskName:i.taskName,description:o,date:i.date,status:i.status};g.updateTask(a,i,l)}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{g.message="Произошла ошибка."}})});g.updateTaskStatus=((e,t,s,a,o)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!s._id){k();return}if(!a._id){h();return}I(e,t,s,a).then(s=>{e=s.listIndex;t=s.taskIndex;const a=g.lists[e];const i=a.tasks[t];const l={taskName:i.taskName,description:i.description,date:i.date,status:o};g.updateTask(a,i,l)}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{g.message="Произошла ошибка."}})});g.deleteTask=((e,t,a,o)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!e._id){k();return}if(!a._id){h();return}I(t,o,e,a).then(e=>{t=e.listIndex;o=e.taskIndex;const a=g.lists[t]._id;const i=g.lists[t].tasks[o]._id;s.deleteTask(g.boardID,a,i).then(()=>{g.lists[t].tasks.splice(o,1);c.emit("boardServer",{boardColor:g.boardColor,lists:g.lists})}).catch(e=>{if(e.status===401){n.message="Войдите в учётную запись для продолжения.";g.logout()}else{g.message="Не удалось удалить карточку."}})}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{g.message="Произошла ошибка."}})});g.uploadAttachment=((e,t,s,o,r)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!o._id){k();return}if(!r._id){h();return}I(t,s,o,r).then(e=>{t=e.listIndex;s=e.taskIndex;const o=angular.element(document.querySelector("#file"));const i=angular.element(document.querySelector("#fileMobile"));let l;if(o[0].files[0]){l=o[0].files[0]}else{l=i[0].files[0]}const{listName:r}=g.lists[t];const d=g.lists[t]._id;const{taskName:m}=g.lists[t].tasks[s];const u=g.lists[t].tasks[s]._id;o.replaceWith('<input type="file" id="file" name="fileName" accept=".jpg, .jpeg, .png, .bmp" onchange="angular.element(event.target.form).triggerHandler(\'submit\');"/>');i.replaceWith('<input type="file" id="fileMobile" name="fileName" accept=".jpg, .jpeg, .png, .bmp" onchange="angular.element(event.target.form).triggerHandler(\'submit\');"/>');a.addAttachment(g.boardID,d,u,l,r,m).then(e=>{const{message:a}=e.data;g.alertFileUpload="alert alert-danger";switch(a){case"LIMIT_FILE_SIZE":g.fileUploaderMessage="Допустимый размер файла до 10 МБ.";break;case"FILE_TYPE":g.fileUploaderMessage="Допустимый формат файла jpeg, bmp, png.";break;case"FILE_WAS_NOT_UPLOADED":g.fileUploaderMessage="Не удалось загрузить файл.";break;case"FILE_WAS_NOT_SELECTED":g.fileUploaderMessage="Файл не был выбран.";break;default:g.alertFileUpload="alert alert-success";g.fileUploaderMessage="Файл загружен!";g.lists[t].tasks[s].attachments.push(e.data);g.modalTask.attachments=g.lists[t].tasks[s].attachments;c.emit("modalTaskServer",{modalList:g.modalList,modalListIndex:g.modalListIndex,modalTask:g.modalTask,modalTaskIndex:g.modalTaskIndex});c.emit("boardServer",{boardColor:g.boardColor,lists:g.lists})}}).catch(e=>{if(e.status===401){n.message="Войдите в учётную запись для продолжения.";g.logout()}else{g.alertFileUpload="alert alert-danger";g.fileUploaderMessage="Не удалось загрузить файл."}})}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{g.message="Произошла ошибка."}})});g.deleteAttachment=((e,t,s,o,r,d)=>{if(!l.isLoggedIn()){n.message="Войдите в учётную запись для продолжения.";i.go("login");return}if(!s._id){k();return}if(!o._id){h();return}I(e,t,s,o).then(s=>{e=s.listIndex;t=s.taskIndex;if(!g.lists[e].tasks[t].attachments||!g.lists[e].tasks[t].attachments[r]){return}const o=g.lists[e]._id;const i=g.lists[e].tasks[t]._id;let l=g.lists[e].tasks[t].attachments[r]._id;if(l!==d._id){for(let s=0;s<g.lists[e].tasks[t].attachments;s++){if(g.lists[e].tasks[t].attachments[s]._id===d._id){l=g.lists[e].tasks[t].attachments[s]._id}}}if(l!==d._id){return}a.deleteAttachment(g.boardID,o,i,l).then(()=>{g.lists[e].tasks[t].attachments.splice(r,1);g.modalTask.attachments=g.lists[e].tasks[t].attachments;c.emit("modalTaskServer",{modalList:g.modalList,modalListIndex:g.modalListIndex,modalTask:g.modalTask,modalTaskIndex:g.modalTaskIndex});c.emit("boardServer",{boardColor:g.boardColor,lists:g.lists})}).catch(e=>{if(e.status===401){n.message="Войдите в учётную запись для продолжения.";g.logout()}else{g.message="Не удалось удалить вложение."}})}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{g.message="Произошла ошибка."}})});g.taskEditor=((e,...t)=>{const s=e.composedPath();for(let e=0;e<s.length;e++){if(s[e].nodeName.toLowerCase()==="a"){s.splice(0,e);break}}const a=s[3].offsetTop;const o=s[3].offsetLeft;const i=s[1].offsetTop;const l=s[1].offsetLeft;const n=s[3].scrollTop;const r=s[7].scrollLeft;g.taskEditWidth=s[1].clientWidth;g.deviceWidth=s[7].clientWidth;g.deviceHeight=s[7].clientHeight;g.taskEditCoordX=o+l-r;g.taskEditCoordY=a+i-n;if(g.deviceHeight-g.taskEditCoordY<135){g.taskEditCoordY=g.deviceHeight-140}g.editTaskBtnSide=g.taskEditCoordX+565>g.deviceWidth;g.editTaskBtnVerticalSide=g.taskEditCoordY+220>g.deviceHeight;g.editTaskDatePickerVerticalSide=g.taskEditCoordY+300>g.deviceHeight;g.editTaskBtnSide?g.editTaskMenuLeft="quick-task-edit-buttons-left":g.editTaskMenuLeft="";g.editTaskBtnSide?g.taskPositionMenu="task-position-menu-left":g.taskPositionMenu="";g.editTaskBtnVerticalSide?g.taskVerticalPositionMenu="task-position-menu-top":g.taskVerticalPositionMenu="";g.editTaskDatePickerVerticalSide?g.taskVerticalPositionDatePicker="quick-task-edit-date-picker-menu-top":g.taskVerticalPositionDatePicker="";g.modalList=t[0];g.modalListIndex=t[1];g.modalTask=t[2];g.modalTaskIndex=t[3];g.editedTaskName=g.modalTask.taskName;g.listNameForTask=g.modalList.listName});g.listMenuPosition=(e=>{const t=e.composedPath();for(let e=0;e<t.length;e++){if(t[e].nodeName.toLowerCase()==="a"){t.splice(0,e);break}}const s=t[7].clientWidth;const a=e.x;a+350>s&&a-350<0?g.listPositionMenu="list-menu-center":a+350>s?g.listPositionMenu="list-menu-left":g.listPositionMenu=""});g.dateSetting=((e,t,s,a)=>{if(!s._id){k();return}if(!a._id){h();return}I(e,t,s,a).then(s=>{e=s.listIndex;t=s.taskIndex;const{date:a}=g.lists[e].tasks[t];if(a){g.now=new Date(a)}else{g.now=new Date;g.now.setDate(g.now.getDate()+1);g.now.setHours(12,0,0,0)}g.taskDate=g.now;g.taskTime=g.now}).catch(e=>{if(e.message==="list not found"){k()}else if(e.message==="task not found"){h()}else{g.message="Произошла ошибка."}})})}})();(()=>{angular.module("trelloClone").controller("registerCtrl",e);e.$inject=["authentication","$state"];function e(e,t){const s=this;s.createAccount=((a,o,i)=>{if(!a||!o||!i){s.registerError="Все поля обязательны для заполнения.";return}const l={name:a,email:o,password:i};e.registerUser(l).then(()=>{s.registerError="";t.go("home")}).catch(e=>{if(e.data.message==="Email already used"){s.registerError="Данный email уже используется."}else{s.registerError="Не удалось создать учётную запись."}})})}})();(()=>{angular.module("trelloClone").controller("loginCtrl",e);e.$inject=["authentication","$state","messageFactory","$location","$window"];function e(e,t,s,a,o){const i=this;i.alertMessage=s.message;i.clearMessage=(()=>{s.message="";i.alertMessage=""});i.login=((s,a)=>{if(!s||!a){i.loginError="Все поля обязательны для заполнения.";return}const o={email:s,password:a};e.login(o).then(()=>{i.loginError="";t.go("home")}).catch(e=>{if(e.data.message==="Incorrect username."){i.loginError="Не верный логин."}else if(e.data.message==="Incorrect password."){i.loginError="Не верный логин или пароль."}else{i.loginError="Не удалось войти в учётную запись."}})});i.params=a.search();if(i.params.token){o.localStorage["trello-clone"]=i.params.token;const s=e.getShortUserName(i.params.name);o.localStorage["trello-clone-user-name"]=s.name;o.localStorage["trello-clone-short-user-name"]=s.shortName;t.go("home");a.search("token",null);a.search("name",null)}i.loginFacebook=(()=>{e.loginFacebook()});i.loginGoogle=(()=>{e.loginGoogle()})}})();(()=>{angular.module("trelloClone").controller("pageHeaderCtrl",e);e.$inject=["authentication","$state","$scope"];function e(e,t,s){const a=this;s.$on("loginModalEvent",(e,t)=>{if(t==="user logged in"){a.checkUser()}});s.$on("userAuth",(e,t)=>{if(t==="token expired"){a.checkUser()}});a.logout=(()=>{e.logout();a.isLoggedIn=false;t.go("home")});(a.checkUser=(()=>{a.isLoggedIn=e.isLoggedIn();if(a.isLoggedIn){a.currentUser=e.currentUser();if(!a.currentUser.name||!a.currentUser.shortName){e.currentUser().then(e=>{a.currentUser=e}).catch(()=>{e.logout();a.isLoggedIn=false})}}else{e.logout();a.isLoggedIn=false}}))()}})();(()=>{angular.module("trelloClone").controller("loginModalCtrl",e);e.$inject=["authentication","$state","$scope"];function e(e,t,s){const a=this;a.login=((o,i)=>{if(!o||!i){a.loginError="Все поля обязательны для заполнения.";return}const l={email:o,password:i};e.login(l).then(()=>{a.loginError="";a.loginModal=!a.loginModal;s.$emit("loginModalEvent","user logged in");t.go("home")}).catch(e=>{if(e.data.message==="Incorrect username."){a.loginError="Не верный логин."}else if(e.data.message==="Incorrect password."){a.loginError="Не верный логин или пароль."}else{a.loginError="Не удалось войти в учётную запись."}})});a.createAccount=((o,i,l)=>{if(!o||!i||!l){a.registerError="Все поля обязательны для заполнения.";return}const n={name:o,email:i,password:l};e.registerUser(n).then(()=>{a.registerError="";a.loginModal=!a.loginModal;s.$emit("loginModalEvent","user logged in");t.go("home")}).catch(e=>{if(e.data.message==="Email already used"){a.registerError="Данный email уже используется."}else{a.registerError="Не удалось создать учётную запись."}})});a.loginFacebook=(()=>{e.loginFacebook()});a.loginGoogle=(()=>{e.loginGoogle()})}})();(()=>{angular.module("trelloClone").service("boardData",e);e.$inject=["$http","authentication"];function e(e,t){const s=()=>{return e.get("/api/board")};const a=(s,a)=>{return e.put(`/api/board/${s}/lists`,a,{headers:{Authorization:`Bearer ${t.getToken()}`}})};return{board:s,updateBoard:a}}})();(()=>{angular.module("trelloClone").service("listData",e);e.$inject=["$http","authentication"];function e(e,t){const s=(s,a)=>{return e.post(`/api/board/${s}/list`,a,{headers:{Authorization:`Bearer ${t.getToken()}`}})};const a=(s,a,o)=>{return e.put(`/api/board/${s}/list/${a}`,o,{headers:{Authorization:`Bearer ${t.getToken()}`}})};const o=(s,a)=>{return e.delete(`/api/board/${s}/list/${a}`,{headers:{Authorization:`Bearer ${t.getToken()}`}})};return{createList:s,updateList:a,deleteList:o}}})();(()=>{angular.module("trelloClone").service("taskData",e);e.$inject=["$http","authentication"];function e(e,t){const s=(s,a,o)=>{return e.post(`/api/board/${s}/list/${a}/task`,o,{headers:{Authorization:`Bearer ${t.getToken()}`}})};const a=(s,a,o,i)=>{return e.put(`/api/board/${s}/list/${a}/task/${o}`,i,{headers:{Authorization:`Bearer ${t.getToken()}`}})};const o=(s,a,o)=>{return e.delete(`/api/board/${s}/list/${a}/task/${o}`,{headers:{Authorization:`Bearer ${t.getToken()}`}})};return{createTask:s,updateTask:a,deleteTask:o}}})();(()=>{angular.module("trelloClone").service("attachmentData",e);e.$inject=["$http","authentication"];function e(e,t){const s=(s,a,o,i,l,n)=>{const r=new FormData;r.append("listName",l);r.append("taskName",n);r.append("attachmentFile",i);return e.post(`/api/board/${s}/list/${a}/task/${o}/attachments`,r,{transformRequest:angular.identity,headers:{Authorization:`Bearer ${t.getToken()}`,"Content-Type":undefined}})};const a=(s,a,o,i)=>{return e.delete(`/api/board/${s}/list/${a}/task/${o}/attachments/${i}`,{headers:{Authorization:`Bearer ${t.getToken()}`}})};return{addAttachment:s,deleteAttachment:a}}})();(()=>{angular.module("trelloClone").service("authentication",e);e.$inject=["$http","$window"];function e(e,t){const s=e=>{t.localStorage["trello-clone"]=e};const a=()=>{return t.localStorage["trello-clone"]};const o=(e,s)=>{t.localStorage["trello-clone-user-name"]=e;t.localStorage["trello-clone-short-user-name"]=s};const i=e=>{let t;if(e.split(" ")[1]){t=e.split(" ")[0].split("")[0]+e.split(" ")[1].split("")[0]}else if(e.split("")[1]){t=e.split(" ")[0].split("")[0]+e.split(" ")[0].split("")[1]}else{t=e.split("")[0]}t=t.toUpperCase();return{name:e,shortName:t}};const l=()=>{t.localStorage.removeItem("trello-clone");t.localStorage.removeItem("trello-clone-user-name");t.localStorage.removeItem("trello-clone-short-user-name")};const n=()=>{const e=a();if(e){const s=JSON.parse(t.atob(e.split(".")[1]));return s.exp>Date.now()/1e3}return false};const r=function(){if(n()){const s=t.localStorage["trello-clone-user-name"];const l=t.localStorage["trello-clone-short-user-name"];if(s&&l){return{name:s,shortName:l}}const n=a();return e.get(`/api/userinfo/${n}`,{headers:{Authorization:`Bearer ${n}`}}).then(e=>{const t=i(e.data);o(t.name,t.shortName);return{name:t.name,shortName:t.shortName}})}};const d=t=>{return e.post(`/api/register`,t).then(e=>{s(e.data.token);const t=i(e.data.name);o(t.name,t.shortName)})};const c=t=>{return e.post(`/api/login`,t).then(e=>{s(e.data.token);const t=i(e.data.name);o(t.name,t.shortName)})};const m=()=>{window.location.replace("http://localhost:3000/api/auth/facebook")};const g=()=>{window.location.replace("http://localhost:3000/api/auth/google")};return{getToken:a,getShortUserName:i,isLoggedIn:n,currentUser:r,registerUser:d,login:c,logout:l,loginFacebook:m,loginGoogle:g}}})();(()=>{const e=()=>{return{restrict:"EA",templateUrl:"/common/directives/pageHeader/pageHeader.template.html",controller:"pageHeaderCtrl as phvm"}};angular.module("trelloClone").directive("pageHeader",e)})();(()=>{const e=()=>{return{restrict:"EA",templateUrl:"/common/directives/quickTaskEditModal/quickTaskEditModal.template.html"}};angular.module("trelloClone").directive("quickTaskEditModal",e)})();(()=>{const e=()=>{return{restrict:"EA",templateUrl:"/common/directives/taskEditModal/taskEditModal.template.html"}};angular.module("trelloClone").directive("taskEditModal",e)})();(()=>{const e=()=>{return{restrict:"EA",templateUrl:"/common/directives/changeTaskPosition/changeTaskPosition.template.html"}};angular.module("trelloClone").directive("changeTaskPosition",e)})();(()=>{const e=()=>{return{restrict:"EA",templateUrl:"/common/directives/dateTimePicker/dateTimePicker.template.html"}};angular.module("trelloClone").directive("dateTimePicker",e)})();(()=>{const e=()=>{return{require:"?ngModel",link(e,t,s,a){if(!a)return;if(s.type!=="time")return;a.$formatters.unshift(function(e){return e.replace(/:00\.000$/,"")})}}};angular.module("trelloClone").directive("input",e)})();(()=>{const e=()=>{return{restrict:"EA",templateUrl:"/common/directives/loginModal/loginModal.template.html",controller:"loginModalCtrl as lmvm"}};angular.module("trelloClone").directive("loginModal",e)})();(()=>{const e=()=>{return{message:""}};angular.module("trelloClone").factory("messageFactory",e)})();(()=>{angular.module("trelloClone").factory("socketioFactory",e);e.$inject=["socketFactory"];function e(e){return e()}})();